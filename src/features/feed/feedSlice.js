import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import Axios from "axios";
import {Post} from "../post/Post";
import React from "react";

const initialState = {
    posts: [],
    name: "qatar",
    isLoading: false,
    isError: false
}

export const loadPostsAsync = createAsyncThunk(
    'feed/loadData',
    async (sub, stateAPI)=>{
        const response = await Axios.get(`https://www.reddit.com/r/${sub}/.json`)
        return {posts: response.data.data.children.map((post, index) => postBuilder(post, index)).filter(exists=> exists), name: sub};
    }
)


export const feedSlice = createSlice({
    name: 'feed',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        setSubReddt: (state, action) => {
            state.name=action.payload;
        }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: {
        [loadPostsAsync.pending]: (state) => {
            state.isLoading = true;
            state.isError = false;
        },
        [loadPostsAsync.fulfilled]: (state, action) => {
            state.isLoading = false;
            state.isError = false;
            state.posts = action.payload.posts;
            state.name = action.payload.name;
        },
        [loadPostsAsync.rejected]: (state) => {
            state.isLoading = false;
            state.isError = true;
        }

        //     builder
        //         .addCase(incrementAsync.pending, (state) => {
        //             state.status = 'loading';
        //         })
        //         .addCase(incrementAsync.fulfilled, (state, action) => {
        //             state.status = 'idle';
        //             state.value += action.payload;
        //         });
        // }
    }
});

export const {setSubReddt} = feedSlice.actions
export const selectPosts = state => state.feed.posts;
export const selectSubName = state => state.feed.name;
export const selectSubPostsLoading = state => state.feed.isLoading;

const postBuilder = (post, index)=>{
    if(!index) return

    if(post.data.selftext){
        return <Post key={post.data.author+ index} link={undefined} author={post.data.author} selftext={post.data.selftext} title={post.data.title} video ={undefined} image={undefined} />
    }
    else if(post.data.post_hint && (post.data.post_hint === "link")){
        return <Post key={post.data.author+ index} urlImage={post.data.thumbnail} link={post.data.url} author={post.data.author} selftext={""} title={post.data.title}
                     video={undefined} image={undefined}/>
    }
    else if(post.data.secure_media){
        return <Post key={post.data.author+ index} link={undefined} videoPoster={post.data.thumbnail} author={post.data.author} video={post.data.secure_media.reddit_video.fallback_url}  image={undefined}  selftext={undefined} title={post.data.title}/>
    }
    else if(post.data.url){
        return <Post key={post.data.author+ index} link={undefined} author={post.data.author} image={post.data.url} title={post.data.title}  selftext={undefined} video ={undefined}/>
    }
}

export default feedSlice.reducer;